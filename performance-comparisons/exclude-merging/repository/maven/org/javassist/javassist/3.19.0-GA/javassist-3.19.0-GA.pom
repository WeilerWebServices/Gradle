<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.javassist</groupId>
  <artifactId>javassist</artifactId>
  <packaging>bundle</packaging>
  
  <version>3.19.0-GA</version>
  <name>Javassist</name>
  

  <issueManagement>
    <system>JIRA</system>
    
  </issueManagement>
  <licenses>
    <!-- this is the license under which javassist is usually distributed
      -->
    <license>
      <name>MPL 1.1</name>
      
    </license>
    <!-- this is the license under which javassist is distributed when
	 it is bundled with JBoss
      -->
    <license>
      <name>LGPL 2.1</name>
      
    </license>
    <!-- this is the license under which javassist can be distributed.
      -->
    <license>
      <name>Apache License 2.0</name>
      
    </license>
  </licenses>

  

  

  <distributionManagement>
  <!--  
      You need entries in your .m2/settings.xml like this:
   <servers>
    <server>
       <id>jboss-releases-repository</id>
       <username>your_jboss.org_username</username>
       <password>password</password>
    </server>
    <server>
       <id>jboss-snapshots-repository</id>
       <username>your_jboss.org_username</username>
       <password>password</password>
    </server>
  </servers>
  
  To deploy a snapshot, you need to run
  
  mvn deploy -Dversion=3.x.y-SNAPSHOT

  To deploy a release you need to change the version to 3.x.y.GA and run

  mvn deploy
    -->
    <repository>
      <id>jboss-releases-repository</id>
      <name>JBoss Releases Repository</name>
      
    </repository>
    <snapshotRepository>
      <id>jboss-snapshots-repository</id>
      <name>JBoss Snapshots Repository</name>
      
    </snapshotRepository>
  </distributionManagement>
  <build>
    <sourceDirectory>src/main/</sourceDirectory>
    <testSourceDirectory>src/test/</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <testSource>1.8</testSource>
          <testTarget>1.8</testTarget>
          <compilerArgument>-parameters</compilerArgument>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.12</version>
        <configuration>
          <includes>
            <include>javassist/JvstTest.java</include>
          </includes>
	  <forkMode>once</forkMode>
          <workingDirectory>runtest</workingDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestFile>${project.build.sourceDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.0.3</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <inherited>true</inherited>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.7</version>
	<configuration>
	  <attach>true</attach>
	</configuration>
      </plugin>
        <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.1.0</version>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <supportedProjectTypes>
            <supportedProjectType>jar</supportedProjectType>
            <supportedProjectType>bundle</supportedProjectType>
            <supportedProjectType>war</supportedProjectType>
          </supportedProjectTypes>
          <instructions>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Version>${project.version}</Bundle-Version>
            <Import-Package>!com.sun.jdi.*</Import-Package>	
            <Export-Package>!com.sun.jdi.*,javassist.*;version="${project.version}"</Export-Package>
          </instructions>
        </configuration>
        <extensions>true</extensions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <!-- profile for releasing to sonatype repo
	 exercise with mvn -PcentralRelease
      -->
    <profile>
      <id>centralRelease</id>
      <!-- obviously we need to use the Sonatype staging repo for upload -->
      <distributionManagement>
	<repository>
	  <id>sonatype-releases-repository</id>
	  <name>Sonatype Releases Repository</name>
	  
	</repository>
      </distributionManagement>
      <!-- we need to be able to sign the jars we install -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <passphrase>${gpg.passphrase}</passphrase>
              <useAgent>${gpg.useAgent}</useAgent>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- profiles to add tools jar containing com.sun.jdi code
	 needed by sample code
	 -->
    <profile>
      <id>default-tools</id>
      <activation>
        <os>
          <family>!mac</family>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.sun</groupId>
          <artifactId>tools</artifactId>
          <version>${java.version}</version>
          <scope>system</scope>
          <optional>true</optional>
          <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>mac-tools</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.sun</groupId>
          <artifactId>tools</artifactId>
          <version>${java.version}</version>
          <scope>system</scope>
          <optional>true</optional>
          <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>

