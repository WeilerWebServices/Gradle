* Aggregate multiple task definitions under a single ~tasks~ block

#+BEGIN_SRC groovy
task compile {
    doLast {
        println 'compiling source'
    }
}

task compileTest(dependsOn: compile) {
    doLast {
        println 'compiling unit tests'
    }
}

task test(dependsOn: [compile, compileTest]) {
    doLast {
        println 'running unit tests'
    }
}

task dist(dependsOn: [compile, test]) {
    doLast {
        println 'building the distribution'
    }
}
#+END_SRC

Becomes:

#+BEGIN_SRC kotlin
val compile by tasks.creating {
    doLast {
        println("compiling source")
    }
}

val compileTest by tasks.creating {
    dependsOn(compile)
    doLast {
        println("compiling unit tests")
    }
}

val test by tasks.creating {
    dependsOn(compile, compileTest)
    doLast {
        println("running unit tests")
    }
}

val dist by tasks.creating {
    dependsOn(compile, test)
    doLast {
        println("building the distribution")
    }
}
#+END_SRC

Becomes:

#+BEGIN_SRC kotlin
tasks {

    val compile by creating {
        doLast {
            println("compiling source")
        }
    }

    val compileTest by creating {
        dependsOn(compile)
        doLast {
            println("compiling unit tests")
        }
    }

    val test by creating {
        dependsOn(compile, compileTest)
        doLast {
            println("running unit tests")
        }
    }

    val dist by creating {
        dependsOn(compile, test)
        doLast {
            println("building the distribution")
        }
    }
}
#+END_SRC
