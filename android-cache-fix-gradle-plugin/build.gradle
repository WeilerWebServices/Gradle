import groovy.json.JsonBuilder

plugins {
    id "com.gradle.plugin-publish" version "0.12.0"
    id 'groovy'
    id 'java-gradle-plugin'
    id 'codenarc'
}

group = "org.gradle.android"
version = ["git", "describe", "--match", "[0-9]*", "--dirty"].execute().text.trim()

// Maps supported Android plugin versions to the versions of Gradle that support it
def supportedVersions = [
    "4.2.0-alpha15": ["6.7"],
    "4.1.0": ["6.5.1"],
    "4.0.2": ["6.1.1", "6.3", "6.4.1"],
    "3.6.4": ["5.6.4", "6.3", "6.4.1"],
    "3.5.4": ["5.4.1", "5.6.4", "6.3", "6.4.1"]
]

repositories {
    google()
    mavenCentral()
    jcenter() {
        content {
            //  org.jetbrains.trove4j is only available in jcenter otherwise we don't want to rely on jcenter.
            includeGroup("org.jetbrains.trove4j")
        }
    }
}

dependencies {
    def agpVersion = "3.5.4"
    compileOnly "com.android.tools.build:gradle:$agpVersion"
    implementation gradleApi()
    testImplementation "com.android.tools.build:gradle:$agpVersion"
    testImplementation gradleTestKit()
    testImplementation "junit:junit:4.12"
    testImplementation "org.spockframework:spock-core:1.1-groovy-2.4@jar"
    testRuntime 'cglib:cglib-nodep:3.2.12'
    testRuntime 'org.objenesis:objenesis:3.1'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

def generatedResources = "$buildDir/generated-resources/main"

tasks.register('generateVersions') {
    def outputFile = file("$generatedResources/versions.json")
    inputs.property "version", version
    inputs.property "supportedVersions", supportedVersions
    outputs.dir generatedResources
    doLast {
        outputFile.text = new JsonBuilder([
            version: version,
            supportedVersions: supportedVersions
        ]).toPrettyString()
    }
}

sourceSets {
    main {
        output.dir(generatedResources, builtBy: generateVersions)
    }
}

pluginBundle {
    website = 'https://github.com/gradle/android-cache-fix-gradle-plugin'
    vcsUrl = 'https://github.com/gradle/android-cache-fix-gradle-plugin'

    description = 'Gradle plugin to fix Android caching problems'

    plugins {
        androidCacheFixPlugin {
            id = 'org.gradle.android.cache-fix'
            displayName = 'Gradle Android cache fix plugin'
            tags = ['android', 'cache', 'fix']
            version = project.version
        }
    }
}

def localRepo = file("$buildDir/local-repo")

artifacts {
    runtime jar
}

tasks.register('install', Upload) {
    repositories {
        ivy {
            url = localRepo.toURI()
        }
    }
    descriptorDestination = file("$buildDir/ivy/ivy.xml")
    uploadDescriptor = true
    configuration = configurations.runtime
}

tasks.withType(Test).configureEach {
    dependsOn install
    systemProperty "local.repo", localRepo.toURI()
}

if (!JavaVersion.current().java8) {
    throw new RuntimeException("Java 8 is required to execute the build")
}
