buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.netflix.nebula:nebula-test:6.1.2'
    }
}

task generateDependencies(type: GenerateDependencies)

import nebula.test.dependencies.*

class GenerateDependencies extends DefaultTask {
    @TaskAction
    void generate() {
        def builder = new DependencyGraphBuilder()
        builder.addModule(new ModuleBuilder('sustitutionrule:a:1.0.0').addDependency('sustitutionrule:substitute:1.0.0').build())
        builder.addModule('sustitutionrule:substitute:1.0.1')
        builder.addModule('sustitutionrule:directsubstitute:2.0.0')
        builder.addModule('sustitutionrule:directsubstitute:2.1.0')
        builder.addModule(new ModuleBuilder('sustitutionrule:arange0:1.0.0').addDependency('sustitutionrule:rangesubstitute:2.0.0').build())
        builder.addModule(new ModuleBuilder('sustitutionrule:arange1:1.0.0').addDependency('sustitutionrule:rangesubstitute:2.2.0').build())
        builder.addModule('sustitutionrule:rangesubstitute:2.5.1')
        builder.addModule(new ModuleBuilder('sustitutionrule:asub:1.0.0').addDependency('sustitutionrule:sub-all:1.0.0').build())
        builder.addModule('sustitutionrule:sub-core:1.0.0')

        builder.addModule(new ModuleBuilder('alignmentrule:b0:1.0.0').addDependency('alignmentrule:align0:1.0.1').build())
        builder.addModule(new ModuleBuilder('alignmentrule:b1:1.0.0').addDependency('alignmentrule:align1:1.1.0').build())
        builder.addModule('alignmentrule:align0:1.1.0')
        builder.addModule('alignmentrule:direct-align0:1.0.1')
        builder.addModule('alignmentrule:direct-align0:1.1.0')
        builder.addModule('alignmentrule:direct-align1:1.1.0')
        builder.addModule(new ModuleBuilder('alignmentrule:exclude-b0:1.0.0').addDependency('alignmentrule:exclude-align0:1.0.1').build())
        builder.addModule(new ModuleBuilder('alignmentrule:exclude-b1:1.0.0').addDependency('alignmentrule:exclude-align1:1.1.0').build())
        builder.addModule(new ModuleBuilder('alignmentrule:exclude-b2:1.0.0').addDependency('alignmentrule:exclude-align2:1.0.2').build())
        builder.addModule('alignmentrule:exclude-align0:1.1.0')
        builder.addModule(new ModuleBuilder('alignmentrule:bforce0:1.0.0').addDependency('alignmentrule:alignforce0:1.0.1').build())
        builder.addModule(new ModuleBuilder('alignmentrule:bforce1:1.0.0').addDependency('alignmentrule:alignforce1:1.0.2').build())
        builder.addModule('alignmentrule:alignforce0:2.0.0')
        builder.addModule('alignmentrule:alignforce1:2.0.0')
        builder.addModule(new ModuleBuilder('rejectrule:breject0:1.0.0').addDependency('rejectrule:reject:1.0.1').build())
        builder.addModule('rejectrule:reject:1.0.0')
        builder.addModule(new ModuleBuilder('replacerule:replacementex0:1.0.0').addDependency('replacerule:replacee:1.0.0').build())
        builder.addModule(new ModuleBuilder('replacerule:replacementex1:1.0.0').addDependency('replacerule:replacement:2.0.0').build())

        builder.addModule(new ModuleBuilder('overridestrategy:a:1.0.0').addDependency('overridestrategy:transitivedeb:1.0.1').build())
        builder.addModule('overridestrategy:transitivedeb:1.0.0')

        builder.addModule(new ModuleBuilder('excluderule:goodlibrary:1.0.0').addDependency('excluderule:badlibrary:1.0.0').build())

        def graph = builder.build()
        def generator = new GradleDependencyGenerator(graph)
        generator.generateTestMavenRepo()
    }
}