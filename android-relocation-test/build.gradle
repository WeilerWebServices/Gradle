apply plugin: 'groovy'

repositories {
    jcenter()
}

dependencies {
    testImplementation "com.google.guava:guava:23.5-jre"
    testImplementation gradleTestKit()
    testImplementation "junit:junit:4.12"
    testImplementation "org.spockframework:spock-core:1.1-groovy-2.4@jar"
}

def androidHome = file(System.getenv("ANDROID_HOME") ?: "${System.getProperty("user.home")}/Library/Android/sdk")
def checkoutDir = file("checkout/santa-tracker")
def originalDir = file("build/original")
def relocatedDir = file("build/relocated")

task processFileResources(type: Copy) {
    from "src/files/resources"
    into "build/files/resources"

    filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [
        ANDROID_HOME: androidHome.absolutePath
    ])
}

task cleanCheckout {
    doFirst {
        println "Building Santa Tracker from commmit:"
        exec {
            workingDir = checkoutDir
            commandLine = ["git", "clean", "-fdx"]
        }
        exec {
            workingDir = checkoutDir
            commandLine = ["git", "rev-parse", "HEAD"]
        }
        exec {
            workingDir = checkoutDir
            commandLine = ["git", "status", "--branch", "--untracked-files"]
        }
    }
}

task copyOriginal(type: Copy) {
    dependsOn cleanCheckout

    from checkoutDir
    from processFileResources
    into originalDir
}

task copyRelocated(type: Copy) {
    dependsOn cleanCheckout

    from checkoutDir
    from processFileResources
    into relocatedDir
}

test {
    dependsOn copyOriginal
    dependsOn copyRelocated

    systemProperty "original.dir", originalDir.absolutePath
    systemProperty "relocated.dir", relocatedDir.absolutePath
    systemProperty "org.gradle.android.test.gradle-installation", System.getProperty("org.gradle.android.test.gradle-installation")
    systemProperty "org.gradle.android.test.android-version", System.getProperty("org.gradle.android.test.android-version")
    systemProperty "org.gradle.android.test.scan-url", System.getProperty("org.gradle.android.test.scan-url")
    systemProperty "org.gradle.smoketests.init.script", System.getProperty("org.gradle.smoketests.init.script")

    def pluginPortalUrl = System.getProperty('org.gradle.internal.plugins.portal.url.override')
    if (pluginPortalUrl) {
        systemProperty 'org.gradle.internal.plugins.portal.url.override', pluginPortalUrl
    }

    inputs.dir originalDir withPropertyName "original.dir"
    inputs.dir relocatedDir withPropertyName "relocated.dir"

    if (System.getenv("TRAVIS") == "true" || Boolean.getBoolean("org.gradle.android.test.show-output")) {
        testLogging.showStandardStreams = true
    }
}

assemble {
    dependsOn copyOriginal
    dependsOn copyRelocated
}
